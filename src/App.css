@import url("https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600&display=swap");

@tailwind base;
@tailwind components;
@tailwind utilities;

/*
#012152
#083171
*/

html, body {
    overflow-x: hidden;
    /* max-width: 1900px;
    margin: auto; */
    font-family: 'Poppins', sans-serif;
    /* font-family: 'Poppins', sans-serif; */
    /* font-family: Tahoma, sans-serif */
    /* font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif; */
    /* font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; */
    /* font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif; */
    /* font-family: Georgia, 'Times New Roman', Times, serif; */
    /* font-family: 'Arial'; */
}

.home-hero-section, .login-page, .signup-page, .categories-page, .contact-us-page, .page-with-bg {
    background-color: white;
    /* background-image: url('./assets/Images/formal-bg.jpg');
    background-repeat: no-repeat;
    background-size: cover; */
    /* background-clip: border-box; */
}

.navbar-items div {
    font-weight: 500;
    font-family: 'Poppins', sans-serif;
    padding-top: 8px;
    padding-bottom: 8px;
    padding-left: 17px;
    padding-right: 17px;
    transition: all;
    transition-duration: 500;
    border: 1px black solid;
    border-radius: 6px;
    /* background-color: white;
    padding: 5px;
    padding-left: 8px;
    padding-right: 8px;
    border-radius: 7px;
    color: black;
    font-weight: 500; */
}

.navbar-items div:hover {
    background-color: #082F66;
    transition: all;
    transition-duration: 500ms;
    color: white;
    /* border: 1px black solid; */
    border-radius: 10px;
}

.active {
    background-color: #082F66;
    color: white;
    /* border: 1px black solid; */
    border-radius: 7px;
    transition: all;
    transition-duration: 500;
}


@media (max-width: 768px) {
    .home-hero-section, .login-page, .signup-page, .categories-page, .contact-us-page {
        background-image: url('./assets/Images/mobile-bg-1.png');
        background-repeat: no-repeat;
        background-size: contain;
        /* background-clip: border-box; */
    }
}

@media (min-width: 3000px) {
    .home-hero-section {
        background: none;
    }
}


/* min or max Change Accordingly */
/*
@media (min-width: 640px) {}
@media (min-width: 768px) {}
@media (min-width: 1024px) {}
@media (min-width: 1280px) {}
@media (min-width: 1536px) {}
*/

.spinner {
    position: absolute;
    width: 9px;
    height: 9px;
 }

 .spinner div {
    position: absolute;
    width: 90%;
    height: 150%;
    background: #4548d2;
    transform: rotate(calc(var(--rotation) * 1deg)) translate(0, calc(var(--translation) * 1%));
    animation: spinner-fzua35 1s calc(var(--delay) * 1s) infinite ease;
 }

 .spinner div:nth-child(1) {
    --delay: 0.1;
    --rotation: 36;
    --translation: 150;
 }

 .spinner div:nth-child(2) {
    --delay: 0.2;
    --rotation: 72;
    --translation: 150;
 }

 .spinner div:nth-child(3) {
    --delay: 0.3;
    --rotation: 108;
    --translation: 150;
 }

 .spinner div:nth-child(4) {
    --delay: 0.4;
    --rotation: 144;
    --translation: 150;
 }

 .spinner div:nth-child(5) {
    --delay: 0.5;
    --rotation: 180;
    --translation: 150;
 }

 .spinner div:nth-child(6) {
    --delay: 0.6;
    --rotation: 216;
    --translation: 150;
 }

 .spinner div:nth-child(7) {
    --delay: 0.7;
    --rotation: 252;
    --translation: 150;
 }

 .spinner div:nth-child(8) {
    --delay: 0.8;
    --rotation: 288;
    --translation: 150;
 }

 .spinner div:nth-child(9) {
    --delay: 0.9;
    --rotation: 324;
    --translation: 150;
 }

 .spinner div:nth-child(10) {
    --delay: 1;
    --rotation: 360;
    --translation: 150;
 }

 @keyframes spinner-fzua35 {
    0%, 10%, 20%, 30%, 50%, 60%, 70%, 80%, 90%, 100% {
       transform: rotate(calc(var(--rotation) * 1deg)) translate(0, calc(var(--translation) * 1%));
    }

    50% {
       transform: rotate(calc(var(--rotation) * 1deg)) translate(0, calc(var(--translation) * 1.5%));
    }
 }